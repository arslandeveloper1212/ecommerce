[{"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\index.js":"1","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\store.js":"2","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\App.js":"3","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reportWebVitals.js":"4","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reducers\\productReducer.js":"5","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reducers\\orderReducer.js":"6","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reducers\\cartReducer.js":"8","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\footer.jsx":"9","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\CartScreen.jsx":"10","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\Header.jsx":"11","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\LoginScreen.jsx":"12","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\ProductDetails.jsx":"13","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\HomeScreen.jsx":"14","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\RegisterScreen.jsx":"15","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\PaymentScreen.jsx":"16","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\ProfileScreen.jsx":"17","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\ShippingScreen.jsx":"18","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\OrderScreen.jsx":"19","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"20","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\constants\\userContants.js":"21","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\constants\\productConstant.js":"22","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\constants\\orderConstant.js":"23","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\constants\\cartConstant.js":"24","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\actions\\userAction.js":"25","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\actions\\cartAction.js":"26","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\actions\\productActions.js":"27","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\actions\\orderAction.js":"28","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\Rating.jsx":"29","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\ProductScreen.jsx":"30","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\shared\\Message.jsx":"31","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\shared\\Loader.jsx":"32","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\shared\\FromContainer.jsx":"33","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\shared\\CheckoutStep.jsx":"34"},{"size":597,"mtime":1639816046000,"results":"35","hashOfConfig":"36"},{"size":1774,"mtime":1686860696754,"results":"37","hashOfConfig":"36"},{"size":1577,"mtime":1729111027843,"results":"38","hashOfConfig":"36"},{"size":362,"mtime":1639816046000,"results":"39","hashOfConfig":"36"},{"size":1006,"mtime":1639816046000,"results":"40","hashOfConfig":"36"},{"size":2653,"mtime":1639816046000,"results":"41","hashOfConfig":"36"},{"size":1976,"mtime":1639816046000,"results":"42","hashOfConfig":"36"},{"size":1084,"mtime":1639816046000,"results":"43","hashOfConfig":"36"},{"size":387,"mtime":1694375923895,"results":"44","hashOfConfig":"36"},{"size":3780,"mtime":1729111849155,"results":"45","hashOfConfig":"36"},{"size":1840,"mtime":1729110761931,"results":"46","hashOfConfig":"36"},{"size":2279,"mtime":1694375598161,"results":"47","hashOfConfig":"36"},{"size":2755,"mtime":1694373890033,"results":"48","hashOfConfig":"36"},{"size":2590,"mtime":1729111633795,"results":"49","hashOfConfig":"36"},{"size":3278,"mtime":1694375847999,"results":"50","hashOfConfig":"36"},{"size":1411,"mtime":1694375773475,"results":"51","hashOfConfig":"36"},{"size":5686,"mtime":1694375822688,"results":"52","hashOfConfig":"36"},{"size":2694,"mtime":1639816046000,"results":"53","hashOfConfig":"36"},{"size":5812,"mtime":1694373621592,"results":"54","hashOfConfig":"36"},{"size":4651,"mtime":1694375790335,"results":"55","hashOfConfig":"36"},{"size":903,"mtime":1639816046000,"results":"56","hashOfConfig":"36"},{"size":371,"mtime":1639816046000,"results":"57","hashOfConfig":"36"},{"size":801,"mtime":1639816046000,"results":"58","hashOfConfig":"36"},{"size":238,"mtime":1639816046000,"results":"59","hashOfConfig":"36"},{"size":3509,"mtime":1639816046000,"results":"60","hashOfConfig":"36"},{"size":1203,"mtime":1639816046000,"results":"61","hashOfConfig":"36"},{"size":1176,"mtime":1694375494821,"results":"62","hashOfConfig":"36"},{"size":3195,"mtime":1639816046000,"results":"63","hashOfConfig":"36"},{"size":1513,"mtime":1639816046000,"results":"64","hashOfConfig":"36"},{"size":891,"mtime":1694373815984,"results":"65","hashOfConfig":"36"},{"size":196,"mtime":1639816046000,"results":"66","hashOfConfig":"36"},{"size":389,"mtime":1639816046000,"results":"67","hashOfConfig":"36"},{"size":336,"mtime":1639816046000,"results":"68","hashOfConfig":"36"},{"size":1333,"mtime":1639816046000,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"ioji8h",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\index.js",[],["143","144"],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\store.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\App.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reducers\\orderReducer.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\reducers\\cartReducer.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\footer.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\CartScreen.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\Header.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\LoginScreen.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\ProductDetails.jsx",["145","146"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Rating from \"../components/Rating\";\nimport { Link } from \"react-router-dom\";\nimport { listProductDetails } from \"../actions/productActions\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Button,\n  Image,\n  ListGroupItem,\n  Form,\n} from \"react-bootstrap\";\nconst ProductDetails = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n  return (\n    <div>\n      <Link to=\"/\" className=\"btn btn-light\">\n        <i className=\"fas fa-arrow-left    \"></i>\n        &nbsp; GO BACK\n      </Link>\n\n      <Row>\n        <Col md={6}>\n          <Image src={product.image} alt={product.name} fluid />\n        </Col>\n        <Col md={3}>\n          <ListGroup variant=\"flush\">\n            <ListGroupItem>\n              <h3>{product.name}</h3>\n            </ListGroupItem>\n            <ListGroupItem>\n              <Rating\n                value={product.rating}\n                text={`${product.numReviews} Reviews`}\n              />\n            </ListGroupItem>\n            <ListGroupItem>Price : ${product.price}</ListGroupItem>\n            <ListGroupItem>{product.description}</ListGroupItem>\n          </ListGroup>\n        </Col>\n        <Col md={3}>\n          <ListGroupItem>\n            <Row>\n              <Col>Status :</Col>\n              <Col>\n                {product.countInStock > 0 ? \"In Stock \" : \"out of stock\"}\n              </Col>\n            </Row>\n          </ListGroupItem>\n          {product.countInStock > 0 && (\n            <ListGroupItem>\n              <Row>\n                <Col>Qty</Col>\n                <Form.Control\n                  as=\"select\"\n                  value={qty}\n                  onChange={(e) => setQty(e.target.value)}\n                >\n                  {[...Array(product.countInStock).keys()].map((x) => (\n                    <option key={x + 1} value={x + 1}>\n                      {x + 1}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Row>\n            </ListGroupItem>\n          )}\n          <ListGroupItem>\n            <Button\n              className=\"btn-block\"\n              type=\"button\"\n              onClick={addToCartHandler}\n            >\n              Add to cart\n            </Button>\n          </ListGroupItem>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default ProductDetails;\n","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\HomeScreen.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\RegisterScreen.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\PaymentScreen.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\ProfileScreen.jsx",["147","148","149"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/shared/Message\";\nimport Loader from \"../components/shared/Loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userAction\";\nimport { listMyOrders } from \"../actions/orderAction\";\nimport { ORDER_CREATE_REQUEST } from \"../constants/orderConstant\";\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  const orderListMy = useSelector((state) => state.orderListMy);\n  const { loading: loadingOrders, orders, error: errorOrders } = orderListMy;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails(\"profile\"));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, userInfo, user, dispatch]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    //dispatch\n    dispatch(updateUserProfile({ id: user._id, name, email, password }));\n  };\n\n  return (\n    <div>\n      <Row>\n        <Col md={3}>\n          <h1>Update Information</h1>\n          {error && <Message varient=\"danger\">{error}</Message>}\n          {success && <Message variant=\"success\">Profile Updated</Message>}\n          {loading && <Loader />}\n          {message && <Message variant=\"danger\">{message}</Message>}\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"enter Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"enter password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"confirmPassword\">\n              <Form.Label>COnfirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Re-enter password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n            <Button type=\"submit\" varient=\"primary\">\n              Update\n            </Button>\n          </Form>\n        </Col>\n        <Col md={9}>\n          <h1>My Orders</h1>\n          {loadingOrders ? (\n            <Loader />\n          ) : errorOrders ? (\n            <Message variant=\"danger\">{errorOrders}</Message>\n          ) : (\n            <Table striped bordered hover responsive className=\"table-sm\">\n              <thead>\n                <tr>\n                  <td>ID</td>\n                  <td>DATE</td>\n                  <td>TOTAL</td>\n                  <td>PAID</td>\n                  <td>DELIVERD</td>\n                  <td></td>\n                </tr>\n              </thead>\n              <tbody>\n                {orders.map((order) => (\n                  <tr key={order._id}>\n                    <td>{order._id}</td>\n                    <td>{order.createdAt.substring(0, 10)}</td>\n                    <td>{order.totalPrice}</td>\n                    <td>\n                      {order.isPaid ? (\n                        order.paidAt.substring(0, 10)\n                      ) : (\n                        <i\n                          className=\"fas fa-times\"\n                          style={{ color: \"red\" }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      {order.isDeleverd ? (\n                        order.deleverdAt.substring(0, 10)\n                      ) : (\n                        <i\n                          className=\"fas fa-times\"\n                          style={{ color: \"red\" }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      <LinkContainer to={`/order/${order._id}`}>\n                        <Button variant=\"light\">Details</Button>\n                      </LinkContainer>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default ProfileScreen;\n","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\ShippingScreen.jsx",["150"],"import React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FromContainer from \"../components/shared/FromContainer\";\nimport { saveShippingAddress } from \"../actions/cartAction\";\nimport ChekcoutStep from \"../components/shared/CheckoutStep\";\nimport CheckoutStep from \"../components/shared/CheckoutStep\";\n\nconst ShippingScreen = ({ history }) => {\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalcode, setPostalcode] = useState(shippingAddress.postalcode);\n  const [country, setCountry] = useState(shippingAddress.country);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    //dispatch\n    dispatch(saveShippingAddress({ address, city, postalcode, country }));\n    history.push(\"/payment\");\n  };\n\n  return (\n    <>\n      <CheckoutStep step1 step2 />\n      <FromContainer>\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"address\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Address\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n              required\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"city\">\n            <Form.Label>City</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter City\"\n              value={city}\n              onChange={(e) => setCity(e.target.value)}\n              required\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"postalcode\">\n            <Form.Label>PostalCode</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter postalcode\"\n              value={postalcode}\n              onChange={(e) => setPostalcode(e.target.value)}\n              required\n            ></Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"country\">\n            <Form.Label>Country</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter Country\"\n              value={country}\n              onChange={(e) => setCountry(e.target.value)}\n              required\n            ></Form.Control>\n          </Form.Group>\n          <Button type=\"submit\" variant=\"primary\">\n            continue\n          </Button>\n        </Form>\n      </FromContainer>\n    </>\n  );\n};\n\nexport default ShippingScreen;\n","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\OrderScreen.jsx",["151"],"import React, { useState, useEffect } from \"react\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport axios from \"axios\";\nimport { ORDER_PAY_RESET } from \"../constants/orderConstant\";\nimport { Button, Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { getOrderDetails, payOrder } from \"../actions/orderAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/shared/Message\";\nimport Loader from \"../components/shared/Loader\";\n\nconst OrderScreen = ({ match }) => {\n  const orderId = match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n  const { loading: loadingPay, success: successpay } = orderPay;\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n  }\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult);\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  useEffect(() => {\n    const addPaypalScript = async () => {\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\n      const script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (!order || successpay) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(getOrderDetails(orderId));\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPaypalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, order, successpay]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant=\"danger\">{error}</Message>\n  ) : (\n    <div>\n      <h2>Order {order._id}</h2>\n      <Row>\n        <Col md={8}>\n          <ListGroup.Item variant=\"flush\">\n            <h2>Shipping</h2>\n            <p>\n              <strong>Name : </strong>\n              {order.user.name}\n            </p>\n            <p>\n              <strong>Email : </strong>\n              {order.user.email}\n            </p>\n            <p>\n              <strong>Address :</strong>\n              {order.shippingAddress.address}&nbsp;\n              {order.shippingAddress.city}&nbsp;\n              {order.shippingAddress.postalcode}&nbsp;\n              {order.shippingAddress.country}&nbsp;\n            </p>\n            {order.isDeliverd ? (\n              <Message variant=\"success\">Paid On {order.isDeliverd}</Message>\n            ) : (\n              <Message variant=\"danger\">Not Deliverd</Message>\n            )}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <h2>Payment Method</h2>\n            <p>\n              <strong>Method :</strong>\n              <strong>{order.paymentMethod}</strong>\n            </p>\n            {order.isPaid ? (\n              <Message variant=\"success\">Paid On {order.paidAt}</Message>\n            ) : (\n              <Message variant=\"danger\">Not Paid</Message>\n            )}\n          </ListGroup.Item>\n          <ListGroup.Item>\n            <h2>Order Items</h2>\n            {order.orderItems.length === 0 ? (\n              <Message>Your Cart is Empty</Message>\n            ) : (\n              <ListGroup variant=\"flush\">\n                {order.orderItems.map((item, index) => (\n                  <ListGroup.Item key={index}>\n                    <Row>\n                      <Col md={1}>\n                        <Image src={item.image} alt={item.name} fluid />\n                      </Col>\n                      <Col>\n                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                      </Col>\n                      <Col md={4}>\n                        {item.qty} X ${item.price} = ${item.price}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            )}\n          </ListGroup.Item>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant=\"danger\">{error}</Message>}\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n          {!order.isPaid && (\n            <ListGroup.Item>\n              {loadingPay && <Loader />}\n              {!sdkReady ? (\n                <Loader />\n              ) : (\n                <PayPalButton\n                  amount={order.totalPrice}\n                  onSuccess={successPaymentHandler}\n                />\n              )}\n            </ListGroup.Item>\n          )}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default OrderScreen;\n","C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\PlaceOrderScreen.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\constants\\userContants.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\constants\\productConstant.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\constants\\orderConstant.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\constants\\cartConstant.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\actions\\userAction.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\actions\\cartAction.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\actions\\orderAction.js",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\Rating.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\screens\\ProductScreen.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\shared\\Message.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\shared\\Loader.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\shared\\FromContainer.jsx",[],"C:\\Users\\ARSLAN\\Desktop\\ecommerce-mern-project-code-main\\frontend\\src\\components\\shared\\CheckoutStep.jsx",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":19,"column":11,"nodeType":"158","messageId":"159","endLine":19,"endColumn":18},{"ruleId":"156","severity":1,"message":"160","line":19,"column":20,"nodeType":"158","messageId":"159","endLine":19,"endColumn":25},{"ruleId":"156","severity":1,"message":"161","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"162","line":10,"column":10,"nodeType":"158","messageId":"159","endLine":10,"endColumn":30},{"ruleId":"156","severity":1,"message":"163","line":17,"column":19,"nodeType":"158","messageId":"159","endLine":17,"endColumn":29},{"ruleId":"156","severity":1,"message":"164","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":20},{"ruleId":"156","severity":1,"message":"165","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":16},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'Link' is defined but never used.","'ORDER_CREATE_REQUEST' is defined but never used.","'setMessage' is assigned a value but never used.","'ChekcoutStep' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]